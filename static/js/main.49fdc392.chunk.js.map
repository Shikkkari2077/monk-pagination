{"version":3,"sources":["components/Posts.js","components/pagination.js","App.js","index.js"],"names":["Posts","posts","loading","className","map","post","title","id","pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","onClick","href","App","useState","setPosts","setLoading","currentPage","setCurrentPage","setPostsPerPage","useEffect","fetchPosts","a","axios","get","res","data","postCount","e","target","value","indexOfLastPost","indexOfFirstPost","currentPosts","slice","name","onChange","length","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAkBeA,EAhBD,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MACZ,OADgC,EAAbC,QAER,4CAGJ,oBAAIC,UAAU,kBAAd,SACJF,EAAMG,KAAI,SAACC,GAAD,OACP,oBAAkBF,UAAU,kBAA5B,SACKE,EAAKC,OADDD,EAAKE,UCmBTC,EA1BI,SAAC,GAOhB,IAHO,IAHPC,EAGM,EAHNA,aACAC,EAEM,EAFNA,WACAC,EACM,EADNA,SAEMC,EAAc,GAEZC,EAAE,EAAEA,GAAGC,KAAKC,KAAKL,EAAaD,GAAcI,IAChDD,EAAYI,KAAKH,GAGrB,OACI,8BACI,oBAAIV,UAAU,aAAd,SACKS,EAAYR,KAAI,SAAAa,GAAM,OACnB,oBAAiBd,UAAU,YAA3B,SACI,mBAAGe,QAAS,kBAAIP,EAASM,IAASE,KAAK,KAAKhB,UAAU,YAAtD,SACKc,KAFAA,WC4CdG,MAtDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOpB,EAAP,KAAcqB,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwCJ,mBAAS,GAAjD,mBAAOZ,EAAP,KAAqBiB,EAArB,KAEAC,qBAAU,WACR,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,6DACjBN,GAAW,GADM,SAECO,IAAMC,IAAI,8CAFX,OAEXC,EAFW,OAGjBV,EAASU,EAAIC,MACbV,GAAW,GAJM,2CAAH,qDAMhBK,MACC,IAGH,IAAMM,EAAY,SAACC,GAAD,OAAOT,EAAgBS,EAAEC,OAAOC,QAG5CC,EAAkBd,EAAcf,EAChC8B,EAAmBD,EAAkB7B,EACrC+B,EAAevC,EAAMwC,MAAMF,EAAkBD,GAQnD,OACE,sBAAKnC,UAAU,iBAAf,UACE,oBAAIA,UAAU,oBAAd,qBACA,oBAAIA,UAAU,aAAd,SACE,oBAAIA,UAAU,YAAd,SACA,yBACQuC,KAAK,GACLnC,GAAG,GACH8B,MAAO5B,EACPkC,SAAUT,EACV/B,UAAU,YALlB,UAMY,wBAAQkC,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,uBAId,cAAC,EAAD,CAAOpC,MAAOuC,EAActC,QAASA,IACrC,cAAC,EAAD,CAAYO,aAAcA,EAAcC,WAAYT,EAAM2C,OAAQjC,SAxBrD,SAACkC,GAAD,OAAgBpB,EAAeoB,IAwB0CX,UAAWA,QCnDvGY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.49fdc392.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Posts = ({posts, loading}) => {\r\n    if(loading){\r\n        return <h2>Loading...</h2>\r\n    }\r\n    \r\n    return <ul className='list-group mb-4'>\r\n      {posts.map((post)=>(\r\n          <li key={post.id} className='list-group-item'>\r\n              {post.title}\r\n          </li>\r\n      ))\r\n\r\n      }\r\n    </ul>\r\n}\r\n\r\nexport default Posts\r\n","import React from 'react'\r\n\r\nconst pagination = ({\r\n    postsPerPage, \r\n    totalPosts, \r\n    paginate\r\n    }) => {\r\n    const pageNumbers = [];\r\n\r\n    for(let i=1;i<=Math.ceil(totalPosts / postsPerPage);i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {pageNumbers.map(number=> (\r\n                    <li key={number} className='page-item'>\r\n                        <a onClick={()=>paginate(number)} href=\"!#\" className='page-link'>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default pagination\r\n","import React, { useEffect, useState } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Posts from \"./components/Posts\";\nimport Pagination from \"./components/pagination\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    };\n    fetchPosts();\n  }, []);\n\n  //////////////Post Count On per Page/////////////////////\n  const postCount = (e) => setPostsPerPage(e.target.value)\n\n  ///////////////////Get Current Posts////////////////////////\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  //////////////////////Change Page//////////////////////////\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  \n\n  // console.log(posts);\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-primary mb-3\">My Blog</h1>\n      <ul className='pagination'>\n        <li className='page-item'>\n        <select \n                name=\"\" \n                id=\"\" \n                value={postsPerPage}\n                onChange={postCount}\n                className='page-link'>\n                    <option value=\"5\">5</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n        </select>\n        </li>\n      </ul>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} postCount={postCount} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}